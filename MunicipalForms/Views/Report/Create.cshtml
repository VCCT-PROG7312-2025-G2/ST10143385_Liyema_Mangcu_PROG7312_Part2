@model MunicipalForms.Models.Report

@{
    ViewData["Title"] = "Submit Report";
}

<div class="container d-flex justify-content-center align-items-center" style="min-height:100vh;">
    <div class="card shadow-lg p-4" style="max-width:600px; width:100%;">
        <h2 class="text-center mb-4">Report an Issue</h2>

        <div id="progressWrapper">
            <div class="progress mb-3">
                <div id="progressBar" class="progress-bar bg-success" role="progressbar" style="width:0%;">
                    0%
                </div>
            </div>
            <p id="progressMessage" class="text-center text-muted mb-4">Let’s begin </p>
        </div>

        <!-- the user form -->
        <form id="reportForm" asp-action="Create" method="post" enctype="multipart/form-data">
            <div class="form-group mb-3">
                <label for="Location"> Location</label>
                <input type="text" class="form-control" id="Location" name="Location" required />
            </div>

            <div class="form-group mb-3">
                <label for="Category"> Category</label>
                <select class="form-control" id="Category" name="Category" required>
                    <option value="">-- Select --</option>
                    <option>Sanitation</option>
                    <option>Roads</option>
                    <option>Utilities</option>
                    <option>Other</option>
                </select>
            </div>

            <div class="form-group mb-3">
                <label for="Description"> Description</label>
                <textarea class="form-control" id="Description" name="Description" rows="4" required></textarea>
            </div>

            <div class="form-group mb-4">
                <label for="AttachmentPath"> Attachment (optional)</label>
                <input type="file" class="form-control" id="AttachmentPath" name="AttachmentPath" accept="image/*" />
            </div>

            <a href="/Home/Dashboard" class="btn btn-secondary w-100 mb-2">Back</a>
            <button type="submit" class="btn btn-primary w-100 mb-2">Submit Report</button>
            <button type="button" id="btnViewReports" class="btn btn-secondary w-100" style="display:none;">View Reports</button>
        </form>

        <div id="confirmationSection" class="mt-4" style="display:none;">
            <h3 class="text-success mb-3">Submitted Reports</h3>
            <div id="confirmationDetails" class="mb-3">

            </div>
            <div class="d-flex justify-content-between">
                <button id="btnNewReport" class="btn btn-primary w-48">Submit Another Report</button>
                <button id="btnBack" class="btn btn-secondary w-48">Back</button>
            </div>
        </div>
    </div>
</div>

<!--Success modal-->
<div class="modal fade" id="successModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center p-4">
            <h3 class="text-success mb-3">🎉 Success!</h3>
            <p>Your report has been submitted successfully.</p>
            <div id="uploadedFilePreview" class="mb-3"></div>
            <div class="d-flex justify-content-around mt-3">
                <button id="btnGreat" class="btn btn-success">Great!</button>
                <a href="/Home/Dashboard" class="btn btn-secondary">Back Home</a>
            </div>
        </div>
    </div>
</div>

<!-- Ganmification for when the form is successfully completed -->
<canvas id="confettiCanvas" style="position:fixed;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:9999;"></canvas>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const form = document.getElementById("reportForm");
        const progressWrapper = document.getElementById("progressWrapper");
        const progressBar = document.getElementById("progressBar");
        const progressMessage = document.getElementById("progressMessage");
        const modal = new bootstrap.Modal(document.getElementById("successModal"));
        const confirmationSection = document.getElementById("confirmationSection");
        const viewReportsButton = document.getElementById("btnViewReports");
        const confirmationDetails = document.getElementById("confirmationDetails");
        const btnBack = document.getElementById("btnBack");
        const inputs = ["Location", "Category", "Description"];
        const uploadedFilePreview = document.getElementById("uploadedFilePreview");
        let reports = []; 


        const messages = [
            "Good start! Keep going ",
            "Almost there! ",
            "Ready to submit "
        ];

        function updateProgress() {
            let filled = 0;
            inputs.forEach(id => {
                if (document.getElementById(id).value.trim() !== "") filled++;
            });
            let percent = (filled / inputs.length) * 100;
            progressBar.style.width = percent + "%";
            progressBar.innerText = Math.round(percent) + "%";
            progressMessage.innerText = filled > 0 ? messages[filled - 1] : "Let’s get started ";
        }

        inputs.forEach(id => {
            document.getElementById(id).addEventListener("input", updateProgress);
        });

        // confetti setup
        function launchConfetti() {
            const canvas = document.getElementById("confettiCanvas");
            const ctx = canvas.getContext("2d");
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;

            const pieces = [];
            for (let i = 0; i < 100; i++) {
                pieces.push({
                    x: Math.random() * canvas.width,
                    y: Math.random() * canvas.height - canvas.height,
                    size: Math.random() * 8 + 4,
                    color: `hsl(${Math.random() * 360}, 100%, 50%)`,
                    speed: Math.random() * 3 + 2
                });
            }

            let animationId;
            function update() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                pieces.forEach(p => {
                    p.y += p.speed;
                    if (p.y > canvas.height) p.y = -p.size;
                    ctx.fillStyle = p.color;
                    ctx.fillRect(p.x, p.y, p.size, p.size);
                });
                animationId = requestAnimationFrame(update);
            }
            update();

            setTimeout(() => {
                cancelAnimationFrame(animationId); 
                ctx.clearRect(0, 0, canvas.width, canvas.height); 
                console.log("Confetti stopped after 1 second");
            }, 1000); 
        }

     
        function renderReports() {
            confirmationDetails.innerHTML = reports.length === 0
                ? "<p>No reports submitted yet.</p>"
                : reports.map((report, index) => `
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Report ${index + 1}</h5>
                            <p><strong>Location:</strong> ${report.location || ""}</p>
                            <p><strong>Category:</strong> ${report.category || ""}</p>
                            <p><strong>Description:</strong> ${report.description || ""}</p>
                            <p><strong>Submitted At:</strong> ${report.submittedAt || ""}</p>
                            ${report.file
                                ? `<img src="${report.file}" alt="Uploaded Image" style="max-width:100%; height:auto; border-radius:8px;"/>`
                                : "<p>No image uploaded.</p>"}
                        </div>
                    </div>
                `).join("");
        }


        form.addEventListener("submit", function (e) {
            e.preventDefault();
            const formData = new FormData(form);

            fetch("/Report/Create", {
                method: "POST",
                body: formData
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {

                    reports.push(data);
                    launchConfetti();
                    uploadedFilePreview.innerHTML = data.file
                        ? `<a href="${data.file}" target="_blank"> View uploaded file</a>`
                        : "";
                    modal.show();


                    form.style.display = "none";
                    progressWrapper.style.display = "none"; 
                    confirmationSection.style.display = "block";
                    viewReportsButton.style.display = "block"; 
                    renderReports();
                } else {
                    alert("Something went wrong: " + data.message);
                }
            })
            .catch(err => {
                console.error("Error submitting form:", err);
                alert("Unexpected error while uploading.");
            });
        });

        // all reports being shown
        viewReportsButton.addEventListener("click", () => {
            form.style.display = "none";
            progressWrapper.style.display = "none"; 
            confirmationSection.style.display = "block";
            renderReports();
        });

     
        function showForm() {
            form.reset();
            progressBar.style.width = "0%";
            progressBar.innerText = "0%";
            progressMessage.innerText = "Let’s get started ";
            uploadedFilePreview.innerHTML = "";
            form.style.display = "block";
            progressWrapper.style.display = "block";
            confirmationSection.style.display = "none";
        }

              document.getElementById("btnGreat").addEventListener("click", () => {
            modal.hide();
            showForm();
        });

        document.getElementById("btnNewReport").addEventListener("click", showForm);

        document.getElementById("btnBack").addEventListener("click", () => {
            window.location.href = "/Home/Dashboard"; 
        });
    </script>
}
